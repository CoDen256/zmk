
/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2023 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED BY GLOVE80 LAYOUT EDITOR
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
/* Include all behavior includes needed */
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/* Automatically generated layer name #define */
#define LAYER_Main 0
#define LAYER_NAV 1
#define LAYER_FUN 2
#define LAYER_NUM 3
#define LAYER_Magic 4

/* To deal with the situation where there is no Lower layer, to keep &lower happy */
#ifndef LAYER_Lower
#define LAYER_Lower 5
#endif

/* Custom Device-tree */



/* Glove80 system behavior & macros */
/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        lower: lower {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo LAYER_Lower>, <&to LAYER_Lower>;
        };
    };
};

/ {
    macros {
        rgb_ug_status_macro: rgb_ug_status_macro {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };
    };
};


/ {
#ifdef BT_DISC_CMD
    behaviors {
        bt_0: bt_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_0>, <&bt BT_DISC 0>;
        };
        bt_1: bt_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_1>, <&bt BT_DISC 1>;
        };
        bt_2: bt_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_2>, <&bt BT_DISC 2>;
        };
        bt_3: bt_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_3>, <&bt BT_DISC 3>;
        };
    };
    macros {
        bt_select_0: bt_select_0 {
            label = "BT_SELECT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };
        bt_select_1: bt_select_1 {
            label = "BT_SELECT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };
        bt_select_2: bt_select_2 {
            label = "BT_SELECT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };
        bt_select_3: bt_select_3 {
            label = "BT_SELECT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };
#else
    macros {
        bt_0: bt_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };
        bt_1: bt_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };
        bt_2: bt_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };
        bt_3: bt_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };
#endif
};

/ {
    behaviors {
        magic: magic {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };
};

/* #define for key positions */
#define POS_LH_T1 52
#define POS_LH_T2 53
#define POS_LH_T3 54
#define POS_LH_T4 69
#define POS_LH_T5 70
#define POS_LH_T6 71
#define POS_LH_C1R2 15
#define POS_LH_C1R3 27
#define POS_LH_C1R4 39
#define POS_LH_C1R5 51
#define POS_LH_C2R1 4
#define POS_LH_C2R2 14
#define POS_LH_C2R3 26
#define POS_LH_C2R4 38
#define POS_LH_C2R5 50
#define POS_LH_C2R6 68
#define POS_LH_C3R1 3
#define POS_LH_C3R2 13
#define POS_LH_C3R3 25
#define POS_LH_C3R4 37
#define POS_LH_C3R5 49
#define POS_LH_C3R6 67
#define POS_LH_C4R1 2
#define POS_LH_C4R2 12
#define POS_LH_C4R3 24
#define POS_LH_C4R4 36
#define POS_LH_C4R5 48
#define POS_LH_C4R6 66
#define POS_LH_C5R1 1
#define POS_LH_C5R2 11
#define POS_LH_C5R3 23
#define POS_LH_C5R4 35
#define POS_LH_C5R5 47
#define POS_LH_C5R6 65
#define POS_LH_C6R1 0
#define POS_LH_C6R2 10
#define POS_LH_C6R3 22
#define POS_LH_C6R4 34
#define POS_LH_C6R5 46
#define POS_LH_C6R6 64
#define POS_RH_T1 57
#define POS_RH_T2 56
#define POS_RH_T3 55
#define POS_RH_T4 74
#define POS_RH_T5 73
#define POS_RH_T6 72
#define POS_RH_C1R2 16
#define POS_RH_C1R3 28
#define POS_RH_C1R4 40
#define POS_RH_C1R5 58
#define POS_RH_C2R1 5
#define POS_RH_C2R2 17
#define POS_RH_C2R3 29
#define POS_RH_C2R4 41
#define POS_RH_C2R5 59
#define POS_RH_C2R6 75
#define POS_RH_C3R1 6
#define POS_RH_C3R2 18
#define POS_RH_C3R3 30
#define POS_RH_C3R4 42
#define POS_RH_C3R5 60
#define POS_RH_C3R6 76
#define POS_RH_C4R1 7
#define POS_RH_C4R2 19
#define POS_RH_C4R3 31
#define POS_RH_C4R4 43
#define POS_RH_C4R5 61
#define POS_RH_C4R6 77
#define POS_RH_C5R1 8
#define POS_RH_C5R2 20
#define POS_RH_C5R3 32
#define POS_RH_C5R4 44
#define POS_RH_C5R5 62
#define POS_RH_C5R6 78
#define POS_RH_C6R1 9
#define POS_RH_C6R2 21
#define POS_RH_C6R3 33
#define POS_RH_C6R4 45
#define POS_RH_C6R5 63
#define POS_RH_C6R6 79

/* Custom Defined Behaviors */
/ {
// CFM
// SET
// PBD
// ----
// Shift ET
// Ctrl SE
// Win EM/ED
// Alt EC/EP

// Ctrl shift CS/CES

// Alt Ctrl CF
// Ctrl win FM
// Alt Ctrl win CFM

// Alt shift PB
// Shift Win BD
// Alt shift win PBD

// Win alt PD/CM

// Ctrl shift win AC
// Ctrl shift alt AS
// Ctrl shit alt win ASC

// 24 25 26
// 36 37 38
// 48 49 50


behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
};


    //
    // Glove80 key positions index for positional hold-tap
    // - https://discord.com/channels/877392805654306816/937645688244826154/1066713913351221248
    // - https://media.discordapp.net/attachments/937645688244826154/1066713913133121556/image.png
    //
    // |------------------------|------------------------|
    // | LEFT_HAND_KEYS         |        RIGHT_HAND_KEYS |
    // |                        |                        |
    // |  0  1  2  3  4         |          5  6  7  8  9 |
    // | 10 11 12 13 14 15      |      16 17 18 19 20 21 |
    // | 22 23 24 25 26 27      |      28 29 30 31 32 33 |
    // | 34 35 36 37 38 39      |      40 41 42 43 44 45 |
    // | 46 47 48 49 50 51      |      58 59 60 61 62 63 |
    // | 64 65 66 67 68         |         75 76 77 78 79 |
    // |                69 52   |   57 74                |
    // |                 70 53  |  56 73                 |
    // |                  71 54 | 55 72                  |
    // |------------------------|------------------------|
    //

macros {



  // Function arrow: ->
  func_arrow: function_arrow {
    compatible = "zmk,behavior-macro";
    label = "FUNCTION_ARROW";
    #binding-cells = <0>;
    tap-ms = <0>;
    wait-ms = <0>;
    bindings
    = <&macro_tap &kp MINUS &kp GREATER_THAN>
    ;
  };

  and_short: and_short{
    compatible = "zmk,behavior-macro";
    label = "AND_SHORT";
    #binding-cells = <0>;
    tap-ms = <0>;
    wait-ms = <0>;
    bindings
    = <&macro_tap &kp AMPERSAND &kp AMPERSAND>
    ;
  };

  or_short: or_short{
    compatible = "zmk,behavior-macro";
    label = "OR_SHORT";
    #binding-cells = <0>;
    tap-ms = <0>;
    wait-ms = <0>;
    bindings
    = <&macro_tap &kp PIPE &kp PIPE>
    ;
  };

  neq_short: neq_short{
    compatible = "zmk,behavior-macro";
    label = "NEQ_SHORT";
    #binding-cells = <0>;
    tap-ms = <0>;
    wait-ms = <0>;
    bindings
    = <&macro_tap &kp EXCLAMATION &kp EQUAL>
    ;
  };

  eq_short: eq_short{
      compatible = "zmk,behavior-macro";
      label = "EQ_SHORT";
      #binding-cells = <0>;
      tap-ms = <0>;
      wait-ms = <0>;
      bindings
      = <&macro_tap &kp EQUAL &kp EQUAL>
      ;
    };
};



combos {
    compatible = "zmk,combos";
        
};

};

/* Automatically generated macro definitions */
/ {
    macros {
    
    };
};


/* Automatically generated keymap */
/ {
    keymap {
        compatible = "zmk,keymap";


        layer_Main {
            bindings = <
    //╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                                                                            ╭─────────────┬─────────────┬─────────────┬──────────────┬─────────────╮
     &kp F1         &kp F2        &kp F3       &kp F4        &kp F5                                                                                                                    &kp F6        &kp F7        &kp F8        &kp F9        &kp F10 
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───────────╮                                                                                 ╭──────────────┼─────────────┼─────────────┼─────────────┼──────────────┼─────────────┤
     &kp EQUAL      &kp N1        &kp N2       &kp K         &kp N4        &kp N5                                                                                       &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &kp MINUS                
//╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴───────────╯                                                                                 ╰──────────────┴─────────────┴─────────────┴─────────────┴──────────────┴─────────────╯
         
//╭─────────────┬──────────────┬─────────────┬─────────────┬─────────────┬────────────╮                                                                               ╭─────────────┬─────────────┬─────────────┬─────────────┬──────────────┬──────────────╮
    &none         &kp ESC        &kp G         &kp H         &kp C          &kp Z                                                                                          &trans       &kp V         &kp L         &kp B         &kp SQT       &none  
//├─────────────┤──────────────┼─────────────┼─────────────┼─────────────┼────────────┤                                                                               ├─────────────┼─────────────┼─────────────┼─────────────┼──────────────┼──────────────┤
    &none         &hml LGUI O    &hml LALT A   &hml LSHFT I  &hml LCTRL N   &qexcl                                                                                         &trans       &hmr LCTRL T  &hmr RSHFT R  &hmr LALT E   &hmr LGUI S   &none  
//├─────────────┤──────────────┼─────────────┼─────────────┼─────────────┼────────────┤ ╭──────────────┬─────────────┬───────╮╭────────┬──────────────┬─────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼──────────────┼──────────────┤
    &kp LSHFT     &kp J          &kp F         &kp U         &kp P          &trans         &mo NAV       &lt FN RET    &none    &none     &mo SYS       &mo NUM           &trans        &kp M         &kp D         &kp Y         &kp X         &kp RSHFT  
//├─────────────┼──────────────┤─────────────┼─────────────┤─────────────┼────────────╯ ├──────────────┼─────────────┼───────┤├────────┼──────────────┼─────────────┤ ╰─────────────┼─────────────┼─────────────┤─────────────┼──────────────┤──────────────┤
    &bootloader   &none         &comma_morph   &quote        &kp Q                         &kp SPACE     &kp BACKSPACE &none    &none     &none         &kp TAB                         &kp W         &kp RET      &dot_morph     &none         &bootloader
//╰─────────────┴──────────────┴─────────────┴─────────────┴─────────────╯              ╰──────────────┴─────────────┴───────╯╰────────┴──────────────┴─────────────╯               ╰─────────────┴─────────────┴─────────────┴──────────────┴──────────────╯                                           
           >;
        };

        layer_NAV {      
                    bindings = <             
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    \
                &kp F1    &kp F2 &kp F3 &kp F4 &kp F5                 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 \
                &kp EQUAL &kp N1 &kp N2 &kp K &kp N4 &kp N5   &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS \
                &kp TAB     &trans           &trans           &kp LS(TAB)   &swapper      &trans           &kp PG_UP     &mt LC(BSPC) BSPC       &mt LC(HOME) UP         &mt LC(DEL)  DEL       &trans             &kp BACKSLASH
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    &kp ESC     &sk LGUI      &sk LALT      &sk LSHFT     &sk LCTRL     &trans                &kp PG_DN     &mt_home 0   LEFT      &mt LC(END)  DOWN       &mt_end 0    RIGHT     &kp RET         &none
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    &none     &trans           &trans           &trans           &trans           &trans             &none &none &none       &none &none &none     &kp INS       &kp TAB       &kp LT        &kp GT        &trans             &none
//├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
    &none &none &none &kp LEFT &kp Q                                               &to DEF           &trans              &none &none     &trans           CANCEL                                                    &kp B &kp DOWN &none &none &none
//╰──────╯                                           ╰─────────────┴─────────────╯ ╰──────╯ ╰─────────────┴─────────────╯                                           ╰──────╯

>;
        };

        layer_FUN {   
                    bindings = <
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    \
                &kp F1    &kp F2 &kp F3 &kp F4 &kp F5                 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 \
                &kp EQUAL &kp N1 &kp N2 &kp K &kp N4 &kp N5   &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS \
                &kp TAB     &kp F12       &kp F7        &kp F8        &kp F9        &trans                  &trans           &kp C_PREV    &kp C_VOL_UP  &kp C_NEXT    &win_sleep      &kp BACKSLASH
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    &kp ESC     &hml LGUI F11 &hml LALT F4  &hml LSHFT F5 &hml LCTRL F6 &trans                  &trans           DSK_PREV      VOL_DOWN      DSK_NEXT      &trans             &none
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    &none     &kp F10       &kp F1        &kp F2        &kp F3        &trans             &none &none &none       &none &none &none     PIN_APP       PIN_WIN       DSK_MGR       &trans           &trans             &none
//├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
    &none &none &none &kp LEFT &kp Q                                               &to DEF           &trans              &none &none     &kp C_MUTE    &kp C_PP                                                  &kp B &kp DOWN &none &none &none
//╰──────╯                                           ╰─────────────┴─────────────╯ ╰──────╯ ╰─────────────┴─────────────╯                                           ╰──────╯
>;
        };

        layer_NUM {  
                    bindings = <
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    \
                &kp F1    &kp F2 &kp F3 &kp F4 &kp F5                 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 \
                &kp EQUAL &kp N1 &kp N2 &kp K &kp N4 &kp N5   &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS \
                &kp TAB     &trans           &kp N7        &kp N8        &kp N9        &trans                  &trans           &trans           &trans           &trans           &trans             &kp BACKSLASH
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    &kp ESC     &hml LGUI N0  &hml LALT N4  &hml LSHFT N5 &hml LCTRL N6 &trans                  &trans           &trans           &trans           &trans           &trans             &none
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    &none     &trans           &kp N1        &kp N2        &kp N3        &trans             &none &none &none       &none &none &none     &trans           &trans           &trans           &trans           &trans             &none
//├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
    &none &none &none &kp LEFT &kp Q                                               &to DEF           &trans              &none &none     &trans           &trans                                                       &kp B &kp DOWN &none &none &none
//╰──────╯                                           ╰─────────────┴─────────────╯ ╰──────╯ ╰─────────────┴─────────────╯                                           ╰──────╯
>;
        };

        layer_Magic {
            bindings = <
  &bt BT_CLR            &none            &none            &none            &none                                                                                  &none   &none   &none   &none  &bt BT_CLR_ALL
       &to 0            &to 1            &to 2            &to 3            &to 4            &to 5                                                         &to 6   &to 7   &to 8   &none   &none           &none
       &none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                         &none   &none   &none   &none   &none           &none
 &bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                         &none   &none   &none   &none   &none     &bootloader
  &sys_reset            &none            &none            &none            &none            &none   &bt_2   &bt_3         &none   &none   &none   &none   &none   &none   &none   &none   &none      &sys_reset
       &none            &none            &none            &none            &none                    &bt_0   &bt_1  &out OUT_USB   &none   &none   &none           &none   &none   &none   &none           &none
            >;
        };

    };
};